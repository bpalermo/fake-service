load("//bazel/multi_arch:transition.bzl", "multi_arch")
load("//bazel/stamp_tags:stamp_tags.bzl", "stamp_tags")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_image_index", "oci_push")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

go_library(
    name = "server_lib",
    srcs = ["main.go"],
    importpath = "github.com/bpalermo/fake-service/cmd/server",
    visibility = ["//visibility:private"],
    deps = ["@com_github_sirupsen_logrus//:logrus"],
)

go_binary(
    name = "server",
    embed = [":server_lib"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "server_test",
    srcs = ["main_test.go"],
    embed = [":server_lib"],
)

pkg_tar(
    name = "app",
    srcs = [":server"],
)

oci_image(
    name = "image",
    architecture = select({
        "@platforms//cpu:arm64": "arm64",
        "@platforms//cpu:x86_64": "amd64",
    }),
    base = "@distroless_base_nonroot",
    tars = [":app"],
    entrypoint = ["/app"],
    os = "linux",
)

multi_arch(
    name = "images",
    image = ":image",
    platforms = [
        "//:linux_arm64",
        "//:linux_amd64",
    ],
)

oci_image_index(
    name = "index",
    images = [
        ":images",
    ],
)

stamp_tags(
    name = "stamped",
    repotags = [
        """($stamp.BUILD_SCM_TAG // "v0.0.0")""",
        """($stamp.BUILD_SCM_REVISION)""",
        "latest",
    ],
)

oci_push(
    name = "push_index",
    image = ":index",
    repository = "index.docker.io/palermo/fake-service",
    repotags = ":stamped",
)
